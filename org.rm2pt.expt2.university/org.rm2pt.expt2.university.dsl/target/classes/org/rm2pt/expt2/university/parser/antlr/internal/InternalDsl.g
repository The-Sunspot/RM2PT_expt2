/*
 * generated by Xtext 2.25.0
 */
grammar InternalDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.rm2pt.expt2.university.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.rm2pt.expt2.university.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.rm2pt.expt2.university.services.DslGrammarAccess;

}

@parser::members {

 	private DslGrammarAccess grammarAccess;

    public InternalDslParser(TokenStream input, DslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "University";
   	}

   	@Override
   	protected DslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleUniversity
entryRuleUniversity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUniversityRule()); }
	iv_ruleUniversity=ruleUniversity
	{ $current=$iv_ruleUniversity.current; }
	EOF;

// Rule University
ruleUniversity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUniversityAccess().getUniversityAction_0(),
					$current);
			}
		)
		otherlv_1='University'
		{
			newLeafNode(otherlv_1, grammarAccess.getUniversityAccess().getUniversityKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUniversityAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUniversityRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.rm2pt.expt2.university.Dsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getUniversityAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='contain'
			{
				newLeafNode(otherlv_4, grammarAccess.getUniversityAccess().getContainKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getUniversityAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUniversityAccess().getContainSchoolParserRuleCall_4_2_0());
					}
					lv_contain_6_0=ruleSchool
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUniversityRule());
						}
						add(
							$current,
							"contain",
							lv_contain_6_0,
							"org.rm2pt.expt2.university.Dsl.School");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getUniversityAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getUniversityAccess().getContainSchoolParserRuleCall_4_3_1_0());
						}
						lv_contain_8_0=ruleSchool
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUniversityRule());
							}
							add(
								$current,
								"contain",
								lv_contain_8_0,
								"org.rm2pt.expt2.university.Dsl.School");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getUniversityAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getUniversityAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRulePerson
entryRulePerson returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPersonRule()); }
	iv_rulePerson=rulePerson
	{ $current=$iv_rulePerson.current; }
	EOF;

// Rule Person
rulePerson returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPersonAccess().getTeacherParserRuleCall_0());
		}
		this_Teacher_0=ruleTeacher
		{
			$current = $this_Teacher_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPersonAccess().getStudentParserRuleCall_1());
		}
		this_Student_1=ruleStudent
		{
			$current = $this_Student_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSchool
entryRuleSchool returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSchoolRule()); }
	iv_ruleSchool=ruleSchool
	{ $current=$iv_ruleSchool.current; }
	EOF;

// Rule School
ruleSchool returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSchoolAccess().getSchoolAction_0(),
					$current);
			}
		)
		otherlv_1='School'
		{
			newLeafNode(otherlv_1, grammarAccess.getSchoolAccess().getSchoolKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSchoolAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchoolRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.rm2pt.expt2.university.Dsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getSchoolAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='sid'
			{
				newLeafNode(otherlv_4, grammarAccess.getSchoolAccess().getSidKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSchoolAccess().getSidEIntParserRuleCall_4_1_0());
					}
					lv_sid_5_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSchoolRule());
						}
						set(
							$current,
							"sid",
							lv_sid_5_0,
							"org.rm2pt.expt2.university.Dsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='containPerson'
			{
				newLeafNode(otherlv_6, grammarAccess.getSchoolAccess().getContainPersonKeyword_5_0());
			}
			otherlv_7='{'
			{
				newLeafNode(otherlv_7, grammarAccess.getSchoolAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSchoolAccess().getContainPersonPersonParserRuleCall_5_2_0());
					}
					lv_containPerson_8_0=rulePerson
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSchoolRule());
						}
						add(
							$current,
							"containPerson",
							lv_containPerson_8_0,
							"org.rm2pt.expt2.university.Dsl.Person");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getSchoolAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSchoolAccess().getContainPersonPersonParserRuleCall_5_3_1_0());
						}
						lv_containPerson_10_0=rulePerson
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSchoolRule());
							}
							add(
								$current,
								"containPerson",
								lv_containPerson_10_0,
								"org.rm2pt.expt2.university.Dsl.Person");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_11='}'
			{
				newLeafNode(otherlv_11, grammarAccess.getSchoolAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getSchoolAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleTeacher
entryRuleTeacher returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTeacherRule()); }
	iv_ruleTeacher=ruleTeacher
	{ $current=$iv_ruleTeacher.current; }
	EOF;

// Rule Teacher
ruleTeacher returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTeacherAccess().getTeacherAction_0(),
					$current);
			}
		)
		otherlv_1='Teacher'
		{
			newLeafNode(otherlv_1, grammarAccess.getTeacherAccess().getTeacherKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTeacherAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTeacherRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.rm2pt.expt2.university.Dsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getTeacherAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='id'
			{
				newLeafNode(otherlv_4, grammarAccess.getTeacherAccess().getIdKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTeacherAccess().getIdEStringParserRuleCall_4_1_0());
					}
					lv_id_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTeacherRule());
						}
						set(
							$current,
							"id",
							lv_id_5_0,
							"org.rm2pt.expt2.university.Dsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='workIn'
			{
				newLeafNode(otherlv_6, grammarAccess.getTeacherAccess().getWorkInKeyword_5_0());
			}
			otherlv_7='('
			{
				newLeafNode(otherlv_7, grammarAccess.getTeacherAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTeacherRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getTeacherAccess().getWorkInSchoolCrossReference_5_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getTeacherAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTeacherRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getTeacherAccess().getWorkInSchoolCrossReference_5_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_11=')'
			{
				newLeafNode(otherlv_11, grammarAccess.getTeacherAccess().getRightParenthesisKeyword_5_4());
			}
		)?
		(
			otherlv_12='teach'
			{
				newLeafNode(otherlv_12, grammarAccess.getTeacherAccess().getTeachKeyword_6_0());
			}
			otherlv_13='('
			{
				newLeafNode(otherlv_13, grammarAccess.getTeacherAccess().getLeftParenthesisKeyword_6_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTeacherRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getTeacherAccess().getTeachStudentCrossReference_6_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_15=','
				{
					newLeafNode(otherlv_15, grammarAccess.getTeacherAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTeacherRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getTeacherAccess().getTeachStudentCrossReference_6_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_17=')'
			{
				newLeafNode(otherlv_17, grammarAccess.getTeacherAccess().getRightParenthesisKeyword_6_4());
			}
		)?
		otherlv_18='}'
		{
			newLeafNode(otherlv_18, grammarAccess.getTeacherAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleStudent
entryRuleStudent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStudentRule()); }
	iv_ruleStudent=ruleStudent
	{ $current=$iv_ruleStudent.current; }
	EOF;

// Rule Student
ruleStudent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Student'
		{
			newLeafNode(otherlv_0, grammarAccess.getStudentAccess().getStudentKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStudentAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStudentRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.rm2pt.expt2.university.Dsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getStudentAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='id'
			{
				newLeafNode(otherlv_3, grammarAccess.getStudentAccess().getIdKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStudentAccess().getIdEStringParserRuleCall_3_1_0());
					}
					lv_id_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStudentRule());
						}
						set(
							$current,
							"id",
							lv_id_4_0,
							"org.rm2pt.expt2.university.Dsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='studyIn'
		{
			newLeafNode(otherlv_5, grammarAccess.getStudentAccess().getStudyInKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStudentRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getStudentAccess().getStudyInSchoolCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='follow'
		{
			newLeafNode(otherlv_7, grammarAccess.getStudentAccess().getFollowKeyword_6());
		}
		otherlv_8='('
		{
			newLeafNode(otherlv_8, grammarAccess.getStudentAccess().getLeftParenthesisKeyword_7());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStudentRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getStudentAccess().getFollowTeacherCrossReference_8_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_10=','
			{
				newLeafNode(otherlv_10, grammarAccess.getStudentAccess().getCommaKeyword_9_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStudentRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getStudentAccess().getFollowTeacherCrossReference_9_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_12=')'
		{
			newLeafNode(otherlv_12, grammarAccess.getStudentAccess().getRightParenthesisKeyword_10());
		}
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getStudentAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
